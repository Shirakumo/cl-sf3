(defpackage #:org.shirakumo.sf3.test
  (:use #:cl #:parachute)
  (:local-nicknames
   (#:sf3 #:org.shirakumo.sf3))
  (:export
   #:sf3))

(in-package #:org.shirakumo.sf3.test)

(define-test sf3)

(defun output-sample-file (object name dir)
  (sf3:write-sf3 object
                 (merge-pathnames (format NIL "~a.~a" name (sf3:file-extension object))
                                  (pathname-utils:subdirectory dir (string-downcase (type-of object))))))

(defun compile-sample-files (dir)
  (flet ((output (object name)
           (output-sample-file object name dir)))
    (output (sf3:make-archive '(("Hello" :path "a")))
            "single-text")
    (output (sf3:make-archive '(("Hello" :path "a")
                                ("There" :path "b")))
            "multi-text")
    (output (sf3:make-audio (make-array 1 :element-type 'single-float)
                            :samplerate 44100 :channels 1)
            "f4-44100-1")
    (output (sf3:make-audio (make-array 2 :element-type 'single-float)
                            :samplerate 44100 :channels 2)
            "f4-44100-2")
    (output (sf3:make-audio (make-array 1 :element-type '(unsigned-byte 8))
                            :samplerate 44100 :channels 1)
            "u8-44100-1")
    (output (sf3:make-image (make-array 3 :element-type '(unsigned-byte 8))
                            1 1 :pixel-type :rgb)
            "rgb-u8-1x1")
    (output (sf3:make-image (make-array 1 :element-type 'single-float)
                            1 1 :pixel-type :v)
            "v-f4-1x1")
    (output (sf3:make-image (make-array 16 :element-type 'single-float)
                            4 4 :pixel-type :v)
            "v-f4-4x4")
    (output (sf3:make-image (make-array 1 :element-type '(unsigned-byte 8))
                            1 1 :pixel-type :v)
            "v-u8-1x1")))
